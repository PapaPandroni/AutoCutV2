# Ruff configuration for AutoCut V2 refactoring
# Fast Python linter and formatter

target-version = "py38"
line-length = 88
indent-width = 4

# Enable rule groups
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "S",    # bandit security
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "C90",  # mccabe complexity
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "EM",   # flake8-errmsg
    "EXE",  # flake8-executable
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print (important for removing print statements!)
    "PYI",  # flake8-pyi
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "TD",   # flake8-todos
    "FIX",  # flake8-fixme
    "ERA",  # eradicate (commented out code)
    "PD",   # pandas-vet
    "PGH",  # pygrep-hooks
    "PL",   # pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "NPY",  # numpy
    "AIR",  # airflow
    "PERF", # perflint
    "FURB", # refurb
    "LOG",  # flake8-logging
    "RUF",  # ruff-specific rules
]

# Ignore specific rules during refactoring phase
ignore = [
    "E501",   # line-too-long (will fix gradually)
    "T20",    # print statements (will remove systematically)
    "FBT001", # boolean-trap in function args (legacy code)
    "FBT002", # boolean-default-value (legacy code) 
    "N806",   # non-lowercase-variable-in-function (legacy code)
    "N803",   # invalid-argument-name (legacy code)
    "N999",   # invalid-module-name (legacy code)
    "S101",   # use of assert (test files)
    "PLR0913", # too-many-arguments (legacy code - will fix)
    "PLR0915", # too-many-statements (legacy code - will fix)
    "C901",    # complex-structure (legacy code - will fix)
    "PLR0912", # too-many-branches (legacy code - will fix) 
    "BLE001",  # bare-except (will fix systematically)
    "S108",    # hardcoded-temp-file (test fixtures)
    "G004",    # f-string in logging (will fix with structured logging)
]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Files and patterns to exclude
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out", 
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "env",
    "cache",
]

# Per-file ignores for specific patterns
[per-file-ignores]
"tests/*" = [
    "S101",    # assert statements are expected in tests
    "PLR2004", # magic value comparison in tests is fine
    "ARG001",  # unused function arguments in test fixtures
    "FBT001",  # boolean trap acceptable in test parameters
]

"__init__.py" = [
    "F401",    # unused imports in __init__.py (re-exports)
    "E402",    # module-import-not-at-top-of-file
]

"src/utils.py" = [
    "PLR0913", # too-many-arguments (will be refactored)
    "C901",    # complex-structure (will be refactored)
]

"src/clip_assembler.py" = [
    "PLR0913", # too-many-arguments (god module - will be refactored)
    "PLR0915", # too-many-statements (god module - will be refactored) 
    "C901",    # complex-structure (god module - will be refactored)
    "PLR0912", # too-many-branches (god module - will be refactored)
]

# Mccabe complexity settings
[mccabe]
max-complexity = 15  # Start higher, reduce as we refactor

# Import sorting configuration
[isort] 
known-first-party = ["autocut"]
split-on-trailing-comma = true